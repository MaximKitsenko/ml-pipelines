// Code generated by protoc-gen-go.
// source: events.proto
// DO NOT EDIT!

/*
Package events is a generated protocol buffer package.

It is generated from these files:
	events.proto

It has these top-level messages:
	ProjectCreated
	DatasetCreated
	DatasetUpdated
	JobAdded
	ServiceCreated
	ServiceMetadata
	ExpertAdded
	DatasetSample
	DatasetMetadata
	Event
*/
package events

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Type int32

const (
	Type_None                 Type = 0
	Type_Event_ProjectCreated Type = 1
	Type_Event_DatasetCreated Type = 2
	Type_Event_DatasetUpdated Type = 3
	Type_Event_ExpertAdded    Type = 4
	Type_Event_JobAdded       Type = 5
	Type_Event_ServiceCreated Type = 6
)

var Type_name = map[int32]string{
	0: "None",
	1: "Event_ProjectCreated",
	2: "Event_DatasetCreated",
	3: "Event_DatasetUpdated",
	4: "Event_ExpertAdded",
	5: "Event_JobAdded",
	6: "Event_ServiceCreated",
}
var Type_value = map[string]int32{
	"None":                 0,
	"Event_ProjectCreated": 1,
	"Event_DatasetCreated": 2,
	"Event_DatasetUpdated": 3,
	"Event_ExpertAdded":    4,
	"Event_JobAdded":       5,
	"Event_ServiceCreated": 6,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Sample storage format. Doesn't necessarily match
// actual data format which could be very cryptic
type DatasetSample_FORMAT int32

const (
	DatasetSample_TEXT DatasetSample_FORMAT = 0
	DatasetSample_TSV  DatasetSample_FORMAT = 1
	DatasetSample_JSON DatasetSample_FORMAT = 2
)

var DatasetSample_FORMAT_name = map[int32]string{
	0: "TEXT",
	1: "TSV",
	2: "JSON",
}
var DatasetSample_FORMAT_value = map[string]int32{
	"TEXT": 0,
	"TSV":  1,
	"JSON": 2,
}

func (x DatasetSample_FORMAT) String() string {
	return proto.EnumName(DatasetSample_FORMAT_name, int32(x))
}
func (DatasetSample_FORMAT) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

type ProjectCreated struct {
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *ProjectCreated) Reset()                    { *m = ProjectCreated{} }
func (m *ProjectCreated) String() string            { return proto.CompactTextString(m) }
func (*ProjectCreated) ProtoMessage()               {}
func (*ProjectCreated) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DatasetCreated struct {
	DatasetId string           `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId" json:"dataset_id,omitempty"`
	ProjectId string           `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Name      string           `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Meta      *DatasetMetadata `protobuf:"bytes,4,opt,name=meta" json:"meta,omitempty"`
}

func (m *DatasetCreated) Reset()                    { *m = DatasetCreated{} }
func (m *DatasetCreated) String() string            { return proto.CompactTextString(m) }
func (*DatasetCreated) ProtoMessage()               {}
func (*DatasetCreated) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DatasetCreated) GetMeta() *DatasetMetadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

type DatasetUpdated struct {
	DatasetId string           `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId" json:"dataset_id,omitempty"`
	ProjectId string           `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Meta      *DatasetMetadata `protobuf:"bytes,3,opt,name=meta" json:"meta,omitempty"`
}

func (m *DatasetUpdated) Reset()                    { *m = DatasetUpdated{} }
func (m *DatasetUpdated) String() string            { return proto.CompactTextString(m) }
func (*DatasetUpdated) ProtoMessage()               {}
func (*DatasetUpdated) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DatasetUpdated) GetMeta() *DatasetMetadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

type JobAdded struct {
	JobId     string   `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	JobName   string   `protobuf:"bytes,2,opt,name=job_name,json=jobName" json:"job_name,omitempty"`
	Inputs    []string `protobuf:"bytes,3,rep,name=inputs" json:"inputs,omitempty"`
	Outputs   []string `protobuf:"bytes,4,rep,name=outputs" json:"outputs,omitempty"`
	ProjectId string   `protobuf:"bytes,5,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
}

func (m *JobAdded) Reset()                    { *m = JobAdded{} }
func (m *JobAdded) String() string            { return proto.CompactTextString(m) }
func (*JobAdded) ProtoMessage()               {}
func (*JobAdded) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ServiceCreated struct {
	ServiceId string           `protobuf:"bytes,1,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ProjectId string           `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Meta      *ServiceMetadata `protobuf:"bytes,3,opt,name=meta" json:"meta,omitempty"`
}

func (m *ServiceCreated) Reset()                    { *m = ServiceCreated{} }
func (m *ServiceCreated) String() string            { return proto.CompactTextString(m) }
func (*ServiceCreated) ProtoMessage()               {}
func (*ServiceCreated) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ServiceCreated) GetMeta() *ServiceMetadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ServiceMetadata struct {
	ServiceName    string   `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	ServiceNameSet bool     `protobuf:"varint,2,opt,name=service_name_set,json=serviceNameSet" json:"service_name_set,omitempty"`
	LocationId     string   `protobuf:"bytes,3,opt,name=location_id,json=locationId" json:"location_id,omitempty"`
	LocationIdSet  bool     `protobuf:"varint,4,opt,name=location_id_set,json=locationIdSet" json:"location_id_set,omitempty"`
	LocationUri    string   `protobuf:"bytes,5,opt,name=location_uri,json=locationUri" json:"location_uri,omitempty"`
	LocationUriSet bool     `protobuf:"varint,6,opt,name=location_uri_set,json=locationUriSet" json:"location_uri_set,omitempty"`
	Description    string   `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	DescriptionSet bool     `protobuf:"varint,8,opt,name=description_set,json=descriptionSet" json:"description_set,omitempty"`
	Experts        []string `protobuf:"bytes,9,rep,name=experts" json:"experts,omitempty"`
	ExpertsSet     bool     `protobuf:"varint,10,opt,name=experts_set,json=expertsSet" json:"experts_set,omitempty"`
}

func (m *ServiceMetadata) Reset()                    { *m = ServiceMetadata{} }
func (m *ServiceMetadata) String() string            { return proto.CompactTextString(m) }
func (*ServiceMetadata) ProtoMessage()               {}
func (*ServiceMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ExpertAdded struct {
	ExpertId   string `protobuf:"bytes,1,opt,name=expert_id,json=expertId" json:"expert_id,omitempty"`
	ExpertName string `protobuf:"bytes,2,opt,name=expert_name,json=expertName" json:"expert_name,omitempty"`
}

func (m *ExpertAdded) Reset()                    { *m = ExpertAdded{} }
func (m *ExpertAdded) String() string            { return proto.CompactTextString(m) }
func (*ExpertAdded) ProtoMessage()               {}
func (*ExpertAdded) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type DatasetSample struct {
	Format DatasetSample_FORMAT `protobuf:"varint,1,opt,name=format,enum=DatasetSample_FORMAT" json:"format,omitempty"`
	Body   string               `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
}

func (m *DatasetSample) Reset()                    { *m = DatasetSample{} }
func (m *DatasetSample) String() string            { return proto.CompactTextString(m) }
func (*DatasetSample) ProtoMessage()               {}
func (*DatasetSample) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

// if a field kind is set, then the corresponding property carries
// a new value (which could be null)
type DatasetMetadata struct {
	RecordCount        int64          `protobuf:"varint,1,opt,name=record_count,json=recordCount" json:"record_count,omitempty"`
	RecordCountSet     bool           `protobuf:"varint,2,opt,name=record_count_set,json=recordCountSet" json:"record_count_set,omitempty"`
	FileCount          int64          `protobuf:"varint,3,opt,name=file_count,json=fileCount" json:"file_count,omitempty"`
	FileCountSet       bool           `protobuf:"varint,4,opt,name=file_count_set,json=fileCountSet" json:"file_count_set,omitempty"`
	StorageBytes       int64          `protobuf:"varint,5,opt,name=storage_bytes,json=storageBytes" json:"storage_bytes,omitempty"`
	StorageBytesSet    bool           `protobuf:"varint,6,opt,name=storage_bytes_set,json=storageBytesSet" json:"storage_bytes_set,omitempty"`
	Sample             *DatasetSample `protobuf:"bytes,7,opt,name=sample" json:"sample,omitempty"`
	SampleSet          bool           `protobuf:"varint,8,opt,name=sample_set,json=sampleSet" json:"sample_set,omitempty"`
	UpdateTimestamp    int64          `protobuf:"varint,9,opt,name=update_timestamp,json=updateTimestamp" json:"update_timestamp,omitempty"`
	UpdateTimestampSet bool           `protobuf:"varint,10,opt,name=update_timestamp_set,json=updateTimestampSet" json:"update_timestamp_set,omitempty"`
	DataFormat         string         `protobuf:"bytes,11,opt,name=data_format,json=dataFormat" json:"data_format,omitempty"`
	DataFormatSet      bool           `protobuf:"varint,12,opt,name=data_format_set,json=dataFormatSet" json:"data_format_set,omitempty"`
	Description        string         `protobuf:"bytes,13,opt,name=description" json:"description,omitempty"`
	DescriptionSet     bool           `protobuf:"varint,14,opt,name=description_set,json=descriptionSet" json:"description_set,omitempty"`
	LocationId         string         `protobuf:"bytes,15,opt,name=location_id,json=locationId" json:"location_id,omitempty"`
	LocationIdSet      bool           `protobuf:"varint,16,opt,name=location_id_set,json=locationIdSet" json:"location_id_set,omitempty"`
	LocationUri        string         `protobuf:"bytes,17,opt,name=location_uri,json=locationUri" json:"location_uri,omitempty"`
	LocationUriSet     bool           `protobuf:"varint,18,opt,name=location_uri_set,json=locationUriSet" json:"location_uri_set,omitempty"`
	Experts            []string       `protobuf:"bytes,19,rep,name=experts" json:"experts,omitempty"`
	ExpertsSet         bool           `protobuf:"varint,20,opt,name=experts_set,json=expertsSet" json:"experts_set,omitempty"`
}

func (m *DatasetMetadata) Reset()                    { *m = DatasetMetadata{} }
func (m *DatasetMetadata) String() string            { return proto.CompactTextString(m) }
func (*DatasetMetadata) ProtoMessage()               {}
func (*DatasetMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DatasetMetadata) GetSample() *DatasetSample {
	if m != nil {
		return m.Sample
	}
	return nil
}

type Event struct {
	Body []byte `protobuf:"bytes,1,opt,name=Body,proto3" json:"Body,omitempty"`
	Type Type   `protobuf:"varint,2,opt,name=Type,enum=Type" json:"Type,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func init() {
	proto.RegisterType((*ProjectCreated)(nil), "ProjectCreated")
	proto.RegisterType((*DatasetCreated)(nil), "DatasetCreated")
	proto.RegisterType((*DatasetUpdated)(nil), "DatasetUpdated")
	proto.RegisterType((*JobAdded)(nil), "JobAdded")
	proto.RegisterType((*ServiceCreated)(nil), "ServiceCreated")
	proto.RegisterType((*ServiceMetadata)(nil), "ServiceMetadata")
	proto.RegisterType((*ExpertAdded)(nil), "ExpertAdded")
	proto.RegisterType((*DatasetSample)(nil), "DatasetSample")
	proto.RegisterType((*DatasetMetadata)(nil), "DatasetMetadata")
	proto.RegisterType((*Event)(nil), "Event")
	proto.RegisterEnum("Type", Type_name, Type_value)
	proto.RegisterEnum("DatasetSample_FORMAT", DatasetSample_FORMAT_name, DatasetSample_FORMAT_value)
}

func init() { proto.RegisterFile("events.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 843 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x8e, 0xda, 0x46,
	0x14, 0x8e, 0xb1, 0x31, 0xf8, 0x18, 0x6c, 0xef, 0x74, 0xb7, 0x72, 0x5a, 0x45, 0x21, 0x34, 0xdd,
	0xd2, 0x48, 0x25, 0x15, 0x95, 0x7a, 0x9f, 0x6c, 0x37, 0x12, 0xa9, 0xb2, 0xa9, 0x0c, 0x5b, 0xf5,
	0x0e, 0xd9, 0x78, 0x76, 0x65, 0x04, 0x8c, 0x65, 0x0f, 0xab, 0xf2, 0x06, 0xbd, 0xe9, 0x53, 0xf4,
	0x2d, 0x2b, 0x55, 0xaa, 0xce, 0xcc, 0x80, 0x07, 0xef, 0x76, 0x45, 0xa5, 0xdc, 0xcd, 0x7c, 0xe7,
	0xe3, 0x3b, 0xc7, 0xe7, 0x6f, 0x80, 0x0e, 0xbd, 0xa3, 0x6b, 0x5e, 0x0e, 0xf3, 0x82, 0x71, 0xf6,
	0xc5, 0xf3, 0x5b, 0xc6, 0x6e, 0x97, 0xf4, 0xb5, 0xb8, 0x25, 0x9b, 0x9b, 0xd7, 0x3c, 0x5b, 0xd1,
	0x92, 0xc7, 0xab, 0x5c, 0x12, 0xfa, 0x17, 0xe0, 0xfd, 0x52, 0xb0, 0x05, 0x9d, 0xf3, 0x8b, 0x82,
	0xc6, 0x9c, 0xa6, 0xe4, 0x19, 0x40, 0x2e, 0x91, 0x59, 0x96, 0x86, 0x46, 0xcf, 0x18, 0x38, 0x91,
	0xa3, 0x90, 0x71, 0x4a, 0x08, 0x58, 0xeb, 0x78, 0x45, 0xc3, 0x86, 0x30, 0x88, 0x73, 0xff, 0x0f,
	0x03, 0xbc, 0x9f, 0x62, 0x1e, 0x97, 0x54, 0x57, 0x49, 0x25, 0xa2, 0xa9, 0x28, 0x64, 0x5c, 0x77,
	0xd2, 0xf8, 0x2f, 0x27, 0x66, 0xe5, 0x84, 0xbc, 0x04, 0x6b, 0x45, 0x79, 0x1c, 0x5a, 0x3d, 0x63,
	0xe0, 0x8e, 0x82, 0xa1, 0x72, 0xf8, 0x81, 0xf2, 0x18, 0x75, 0x23, 0x61, 0xed, 0xf3, 0x7d, 0x24,
	0xd7, 0x79, 0xfa, 0x09, 0x22, 0xd9, 0x79, 0x35, 0x1f, 0xf5, 0xfa, 0xa7, 0x01, 0xed, 0xf7, 0x2c,
	0x79, 0x93, 0xa6, 0x34, 0x25, 0x67, 0x60, 0x2f, 0x58, 0x52, 0x39, 0x6b, 0x2e, 0x58, 0x32, 0x4e,
	0xc9, 0x53, 0x68, 0x23, 0xac, 0x25, 0xaf, 0xb5, 0x60, 0xc9, 0x15, 0x7e, 0xda, 0xe7, 0x60, 0x67,
	0xeb, 0x7c, 0xc3, 0xcb, 0xd0, 0xec, 0x99, 0x03, 0x27, 0x52, 0x37, 0x12, 0x42, 0x8b, 0x6d, 0xb8,
	0x30, 0x58, 0xc2, 0xb0, 0xbb, 0xd6, 0xa2, 0x6e, 0xd6, 0xa2, 0xc6, 0x2c, 0x4c, 0x68, 0x71, 0x97,
	0xcd, 0xa9, 0x56, 0x8f, 0x52, 0x22, 0x5a, 0x16, 0x14, 0xf2, 0xff, 0xb3, 0xa0, 0xc4, 0x6b, 0x59,
	0xf8, 0xbb, 0x01, 0x7e, 0xcd, 0x42, 0x5e, 0x40, 0x67, 0xe7, 0x57, 0x7c, 0xb9, 0xf4, 0xec, 0x2a,
	0x4c, 0x7c, 0xfd, 0x00, 0x02, 0x9d, 0x32, 0x2b, 0x29, 0x17, 0x11, 0xb4, 0x23, 0x4f, 0xa3, 0x4d,
	0x28, 0x27, 0xcf, 0xc1, 0x5d, 0xb2, 0x79, 0xcc, 0x33, 0xb6, 0xc6, 0x30, 0x65, 0x77, 0xc0, 0x0e,
	0x1a, 0xa7, 0xe4, 0x1c, 0x7c, 0x8d, 0x20, 0x94, 0x2c, 0xa1, 0xd4, 0xad, 0x48, 0x28, 0xf4, 0x02,
	0x3a, 0x7b, 0xde, 0xa6, 0xc8, 0x54, 0x02, 0xf7, 0xe2, 0xd7, 0x45, 0x86, 0x51, 0xe9, 0x14, 0xa1,
	0x65, 0xcb, 0xa8, 0x34, 0x1a, 0x8a, 0xf5, 0xc0, 0x4d, 0x69, 0x39, 0x2f, 0xb2, 0x1c, 0xc1, 0xb0,
	0x25, 0xb5, 0x34, 0x88, 0x7c, 0x03, 0xbe, 0x76, 0x15, 0x52, 0x6d, 0x29, 0xa5, 0xc1, 0x28, 0x15,
	0x42, 0x8b, 0xfe, 0x9e, 0xd3, 0x82, 0x97, 0xa1, 0x23, 0x0b, 0xae, 0xae, 0xf8, 0xe9, 0xea, 0x28,
	0x7e, 0x0e, 0xe2, 0xe7, 0xa0, 0xa0, 0x09, 0xe5, 0xfd, 0x9f, 0xc1, 0xbd, 0x14, 0x37, 0xd9, 0x84,
	0x5f, 0x82, 0x23, 0x8d, 0x55, 0xb9, 0xdb, 0x12, 0x18, 0xa7, 0x95, 0x98, 0xde, 0x8d, 0x4a, 0x0c,
	0x73, 0xdd, 0xdf, 0x42, 0x57, 0x35, 0xfa, 0x24, 0x5e, 0xe5, 0x4b, 0x4a, 0xbe, 0x03, 0xfb, 0x86,
	0x15, 0xab, 0x98, 0x0b, 0x2d, 0x6f, 0x74, 0x36, 0x3c, 0xb0, 0x0f, 0xdf, 0x7d, 0x8c, 0x3e, 0xbc,
	0x99, 0x46, 0x8a, 0x84, 0xf3, 0x9b, 0xb0, 0x74, 0xbb, 0x5b, 0x12, 0x78, 0xee, 0x7f, 0x0d, 0xb6,
	0x64, 0x91, 0x36, 0x58, 0xd3, 0xcb, 0xdf, 0xa6, 0xc1, 0x13, 0xd2, 0x02, 0x73, 0x3a, 0xf9, 0x35,
	0x30, 0x10, 0x7a, 0x3f, 0xf9, 0x78, 0x15, 0x34, 0xfa, 0xff, 0x34, 0xc1, 0xaf, 0x0d, 0x19, 0x96,
	0xab, 0xa0, 0x73, 0x56, 0xa4, 0xb3, 0x39, 0xdb, 0xac, 0x65, 0x0c, 0x66, 0xe4, 0x4a, 0xec, 0x02,
	0x21, 0x2c, 0x97, 0x4e, 0xd1, 0x9b, 0x48, 0xa3, 0x61, 0x8e, 0x9f, 0x01, 0xdc, 0x64, 0x4b, 0xaa,
	0xa4, 0x4c, 0x21, 0xe5, 0x20, 0x22, 0x85, 0x5e, 0x82, 0x57, 0x99, 0xb5, 0x0e, 0xea, 0xec, 0x29,
	0x28, 0xf2, 0x15, 0x74, 0x4b, 0xce, 0x8a, 0xf8, 0x96, 0xce, 0x92, 0x2d, 0xa7, 0xa5, 0xe8, 0x20,
	0x33, 0xea, 0x28, 0xf0, 0x2d, 0x62, 0xe4, 0x15, 0x9c, 0x1c, 0x90, 0xb4, 0x1e, 0xf2, 0x75, 0x22,
	0x0a, 0x9e, 0x83, 0x5d, 0x8a, 0x54, 0x8a, 0xfe, 0x71, 0x47, 0xde, 0x61, 0x82, 0x23, 0x65, 0x15,
	0x73, 0x2c, 0x4e, 0x5a, 0x17, 0x39, 0x12, 0x41, 0x99, 0x6f, 0x21, 0xd8, 0x88, 0xbd, 0x37, 0xdb,
	0x2f, 0xfa, 0xd0, 0x11, 0xa1, 0xf9, 0x12, 0x9f, 0xee, 0x60, 0xf2, 0x3d, 0x9c, 0xd6, 0xa9, 0x5a,
	0x6b, 0x91, 0x1a, 0x5d, 0x8d, 0x1f, 0x96, 0x63, 0xa6, 0x3a, 0xc1, 0x95, 0x6d, 0x83, 0xd0, 0x3b,
	0x59, 0xf6, 0x73, 0xf0, 0x35, 0x82, 0x50, 0xeb, 0xc8, 0xf1, 0xab, 0x48, 0x0f, 0x4c, 0x4c, 0xf7,
	0xa8, 0x89, 0xf1, 0x1e, 0x9c, 0x98, 0xda, 0x4a, 0xf0, 0x8f, 0x59, 0x09, 0xc1, 0x31, 0x2b, 0xe1,
	0xe4, 0xb8, 0x95, 0x40, 0x1e, 0x5c, 0x09, 0xda, 0x1c, 0x7f, 0xf6, 0xe8, 0x1c, 0x9f, 0xde, 0x9b,
	0xe3, 0x1f, 0xa1, 0x79, 0x89, 0x2f, 0x38, 0xce, 0xd0, 0x5b, 0x9c, 0x21, 0x6c, 0xf6, 0x4e, 0x24,
	0xce, 0xe4, 0x29, 0x58, 0xd3, 0x6d, 0x2e, 0x27, 0xd6, 0x1b, 0x35, 0x87, 0x78, 0x89, 0x04, 0xf4,
	0xea, 0x2f, 0x43, 0xda, 0x70, 0x94, 0xae, 0xd8, 0x9a, 0x06, 0x4f, 0x48, 0x08, 0xa7, 0x42, 0x6a,
	0x76, 0xf8, 0xc2, 0x07, 0x46, 0x65, 0x39, 0x7c, 0xb5, 0x83, 0xc6, 0x3d, 0x8b, 0x7a, 0x45, 0x03,
	0x93, 0x9c, 0xc1, 0x89, 0xb4, 0x68, 0x6b, 0x26, 0xb0, 0x08, 0x01, 0x4f, 0xc2, 0xbb, 0xf7, 0x2f,
	0x68, 0x56, 0x22, 0x87, 0x8f, 0x50, 0x60, 0x27, 0xb6, 0xf8, 0xd7, 0xf1, 0xc3, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x2d, 0x76, 0x33, 0x27, 0xa6, 0x08, 0x00, 0x00,
}
